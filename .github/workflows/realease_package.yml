name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - master

permissions:
  id-token: write  # Required for OIDC authentication
  contents: write
  actions: write

env:
  CLOUDSMITH_NAMESPACE: interview-ashish-dwivedi
  CLOUDSMITH_REPOSITORY: ci-cdtrial

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install Cloudsmith CLI and dependencies
      - name: Install Cloudsmith CLI
        run: |
          python -m pip install --upgrade pip
          pip install cloudsmith-cli twine

      # Download artifact from previous workflow
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist/  # Updated path here to 'dist/'
          repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}
          
      # Authenticate with Cloudsmith using OIDC
      - name: Authenticate with Cloudsmith
        run: |
          # Use GitHub OIDC token for authentication
          cloudsmith login \
            --username "${{ github.actor }}" \
            --oidc-provider github \
            --oidc-token "${{ steps.id-token.outputs.id-token }}"
      # List and verify package contents
      - name: Verify package
        run: |
          echo "Listing package contents:"
          ls -la dist/
          
          # Check if package exists
          if [ -z "$(ls -A dist/*.tar.gz 2>/dev/null)" ]; then
            echo "No package found to upload"
            exit 1
          fi

      # Generate Cloudsmith temporary token
      - name: Generate Cloudsmith Token
        env:
          CLOUDSMITH_USERNAME: interview-ashish-dwivedi
          CLOUDSMITH_TOKEN: 5ef6bb33d4637bb3ceff3b4d97151088977f5840
        run: |
          # Request a temporary token from Cloudsmith
          TOKEN_RESPONSE=$(curl -s \
            -H "Authorization: Token $CLOUDSMITH_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"description": "GitHub Actions Token", "duration": 3600}' \
            "https://cloudsmith.io/api/v1/tokens/generate/")
          
          # Extract the token (this is a simplified extraction, may need adjustment)
          TEMP_TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r '.token')
          
          # Set the token as an environment variable for the next step
          echo "CLOUDSMITH_TEMP_TOKEN=$TEMP_TOKEN" >> $GITHUB_ENV

      # Push package to Cloudsmith
      - name: Push package to Cloudsmith
        env:
          CLOUDSMITH_TEMP_TOKEN: ${{ env.CLOUDSMITH_TEMP_TOKEN }}
        run: |
          for package in dist/*.tar.gz dist/*.whl; do
            if [ -f "$package" ]; then
              echo "Publishing $package"
              CLOUDSMITH_API_KEY="$CLOUDSMITH_TEMP_TOKEN" cloudsmith push python \
                "${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }}" \
                "$package" \
                --republish
            fi
          done
